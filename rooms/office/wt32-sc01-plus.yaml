substitutions:
  SCREEN_MAIN: master
  SCREEN_BLINDS: blinds

ha_deck:
  screens:
    - name: ${SCREEN_MAIN}
      widgets:

        # Time
        - type: value-card
          id: local_time
          position: ${box1}
          text: London
          visible: |-
            return true;


        # Outdoor Temperature
        - type: value-card
          id: outdoor_temperature
          position: ${box2}
          text: Outside
          # icon: 󰔏
          unit: °C
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.0f", id(outdoor_temperature_sensor).state);
            return std::string(buff);


        # Office Temperature
        - type: value-card
          id: office_temperature
          position: ${box3}
          text: Office
          # icon: 󰔏
          unit: °C
          enabled: return true;
          value: |-
            char buff[10] = "-";
            sprintf(buff, "%.0f", id(office_temperature_sensor).state);
            return std::string(buff);

        # Lenovo Power
        - type: button
          position: ${box4}
          text: Lenovo
          icon: 󰇅
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_lenovo_power_state).state;
          on_turn_on:
            - http_request.get:
                url: http://192.168.10.76:9000/hooks/webhook
#            - homeassistant.service:
#                service: switch.turn_on
#                data:
#                  entity_id: switch.office_lenovo_power_switch

        
        # Printer Power
        - type: button
          position: ${box5}
          text: Printer
          icon: 󰐫
          toggle: true
          enabled: return true;
          checked: |-
            return id(printer_power).state;
          on_turn_on:
            - homeassistant.service:
                service: switch.turn_on
                data:
                  entity_id: switch.office_3d_printer_power
          on_turn_off:
            - homeassistant.service:
                service: switch.turn_off
                data:
                  entity_id: switch.office_3d_printer_power


        # Printer Lights
        - type: button
          position: ${box6}
          text: Lights
          icon: 󰟖
          toggle: true
          enabled: return true;
          checked: |-
            return id(printer_lights).state;
          on_turn_on:
            - homeassistant.service:
                service: switch.turn_on
                data:
                  entity_id: switch.office_3d_printer_lights
          on_turn_off:
            - homeassistant.service:
                service: switch.turn_off
                data:
                  entity_id: switch.office_3d_printer_lights

                  
        # Office Air Conditioner
        - type: button
          position: ${box7}
          text: Aircon
          icon: 󰈐
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_air_condition).state;
          on_turn_on:
            - homeassistant.service:
                service: climate.set_hvac_mode
                data:
                  entity_id: climate.office_air_conditioner
                  hvac_mode: "auto"
          on_turn_off:
            - homeassistant.service:
                service: climate.set_hvac_mode
                data:
                  entity_id: climate.office_air_conditioner
                  hvac_mode: "off"


        # Office Blind
        - type: button
          position: ${box8}
          text: Blind
          icon: 󰂬
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_blind).state;
          on_turn_on:
            - homeassistant.service:
                service: cover.set_cover_position
                data:
                  entity_id: cover.office_blind
                  position: '20'
          on_turn_off:
            - homeassistant.service:
                service: cover.set_cover_position
                data:
                  entity_id: cover.office_blind
                  position: '100'
          on_long_press:
            lambda: id(deck).switch_screen("$SCREEN_BLINDS");


        # Scene Features
        - type: button
          position: ${box9}
          text: Features
          icon: 󱁑
          enabled: return true;
          checked: |-
            return id(office_scene_features).state;
          on_click:
            - homeassistant.service:
                service: scene.turn_on
                data:
                  entity_id: scene.office_features
          on_long_press:
            - homeassistant.service:
                service: scene.turn_on
                data:
                  entity_id: scene.office_off


        # Scene Calls
        - type: button
          position: ${box10}
          text: Calls
          icon: 󰔂
          enabled: return true;
          checked: |-
            return id(office_scene_desk_call).state;
          on_click:
            then:
            - homeassistant.service:
                service: scene.turn_on
                data:
                  entity_id: scene.office_desk_call


        # Scene Evening
        - type: button
          position: ${box11}
          text: Evening
          icon: 󰌵
          enabled: return true;
          checked: |-
            return id(office_scene_evening).state;
          on_click:
            then:
            - homeassistant.service:
                service: scene.turn_on
                data:
                  entity_id: scene.office_evening


        # Storage Light
        - type: button
          position: ${box12}
          text: Storage
          icon: 󰝩
          toggle: true
          enabled: return true;
          checked: |-
            return id(office_storage).state;
          on_turn_on:
            - homeassistant.service:
                service: light.turn_on
                data:
                  entity_id: light.office_storage
          on_turn_off:
            - homeassistant.service:
                service: light.turn_off
                data:
                  entity_id: light.office_storage


# Slider for Blinds
    - name: ${SCREEN_BLINDS}
      widgets:

        - type: button
          position: 0, 0
          dimensions: 48x320
          icon: 󰅁
          enabled: return true;
          on_click:
            - lambda: id(deck).switch_screen("$SCREEN_MAIN");

        - type: slider
          position: 200, 8
          dimensions: 100x304
          text: Blind
          min: 0
          max: 100
          enabled: return true;
          value: return id(office_blind_position).state;
          on_change:
          - homeassistant.service:
              service: cover.set_cover_position
              data:
                entity_id: cover.office_blind
                position: !lambda return x;
